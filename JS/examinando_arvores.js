/*
 * ## üå± Sobre o Desafio
 * Chegando no Vale, ao lado do rio Jacar√°-Mirim, a natureza se mostra exuberante. Por√©m, √© necess√°rio verificar 
 * as √°rvores da regi√£o est√£o saud√°veis ou necessitando de cuidados. Para isso, durante nossa jornada at√© o vale,
 * utilizamos um dispositivo de ultrassom desenvolvido por uma das CleanTechs parceiras, a Cleanduino
 * (especializada em projetos com Arduino e JavaScript, usando o Framework Johnny-Five). Atrav√©s desse
 * dispositivo coletamos uma lista de amostras, onde cada registro tem o percentual de sa√∫de da √°rvore avaliada.
 * 
 * ## O que deve ser feito?
 * Crie um c√≥digo que, para cada item dessa lista, verifique se a amostra est√° com um n√≠vel: Bom, Aceit√°vel
 * ou Inaceit√°vel. Para cada n√≠vel, imprima a a√ß√£o que deve ser realizada considerando as seguintes regras:
 *     1. Bom (mais de 75% de sa√∫de na amostra)
 *        1.1 Imprima "Descartar da lista"
 *     2. Aceit√°vel (mais de 50% e menos de 75%) 
 *        2.1 Imprima "Manter sob observa√ß√£o"
 *     3. Inaceit√°vel (menos de 50%) 
 *        3.1 Imprima "Isolar e iniciar protocolo de cuidados"
 * 
 * Obs.: Lembrando que todas as amostras s√£o de exatamente 100g e as listas ter√£o tamanhos variados.
 * 
 * ## üåÖ Entradas automatizadas e Sa√≠das esperadas
 * 
 * As entradas ser√° uma lista com as porcentagens de sa√∫de das √°rvores. Para a sa√≠da esperamos que seja printado no
 * console, dependendo da porcentagem, se a √°rvore deve: "Ser descartada da lista", "Manter sob observa√ß√£o" ou 
 * "Isolar e iniciar protocolos de cuidados". Essas frases devem ser printadas para cada item da lista.
 * 
 */

//Desafios JavaScript na DIO t√™m fun√ß√µes "gets" e "print" acess√≠veis globalmente:
//- "gets" : l√™ UMA linha com dado(s) de entrada (inputs) do usu√°rio;
//- "print": imprime um texto de sa√≠da (output), pulando linha.

let amostra = gets().split(',')

/*
 * Neste desafio foi utilizada a t√©cnica de estrutura de repeti√ß√£o
 * no caso de amostra, tamb√©m foi associada a fun√ß√£o length para obter
 * o tamanho da string contada em cada itera√ß√£o do for. Uma vez que a entrada cuidados
 * dados n√£o era do tipo inteiro, e sim string. Motivo pelo qual foi utilizado .split(',')
 *
 */
 
for (let i = 0; i < amostra.length; i++) {
  if (amostra[i] >= 75) {
    console.log("Descartar da lista"); // Se o elemento for maior ou igual a 75, descartar
  } else if (amostra[i] >= 50) {
    console.log("Manter sob observa√ß√£o"); // Se o elemento for maior ou igual a 50 e menor que 75, manter sob observa√ß√£o
  } else {
    console.log("Isolar e iniciar protocolo de cuidados"); // Se o elemento for menor que 50, isolar e iniciar protocolo de cuidados
  }
}