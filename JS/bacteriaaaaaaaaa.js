/*
 * ## üå± Sobre o Desafio
 * Por conta do extrativismo e a presen√ßa humana na regi√£o, o rio Jacar√°-Mirim est√° com n√≠veis alt√≠ssimos de pl√°stico
 * em todas as suas formas, em sua maioria originados de descartes irregulares da Oil Corp. Para isso, a coordenadora 
 * da expedi√ß√£o Camila (uma ecologista engajada e expert em Java), criou uma ecobarreira com sua equipe. Essa ecobarreira, 
 * como a palavra j√° diz, barra o pl√°stico e o mant√©m acumulado em uma por√ß√£o do rio para que depois ele seja coletado  
 * e retirado da √°gua.
 * 
 * Nesse contexto, o pl√°stico √© degradado sempre pela metade a cada dia. Ent√£o se temos 1000kg em um dia, no pr√≥ximo 
 * teremos 500kg, no seguinte 250kg e assim por diante.
 * 
 * ## O que deve ser feito?
 * Crie um c√≥digo que, dependendo da quantidade de pl√°stico, nos diga em quantos dias teremos 1kg ou menos de pl√°stico 
 * (viabilizando a coleta manual).
 * 
 * ## üåÖ Entradas automatizadas e Sa√≠das esperadas
 * A entrada ser√° a quantidade de pl√°stico em quilogramas. A sa√≠da dever√° ser a quantidade de dias que levar√° para que 
 * essa quantidade de pl√°stico chegue a 1kg ou menos.
 * 
 */

//Desafios JavaScript na DIO t√™m fun√ß√µes "gets" e "print" acess√≠veis globalmente:
//- "gets" : l√™ UMA linha com dado(s) de entrada (inputs) do usu√°rio;
//- "print": imprime um texto de sa√≠da (output), pulando linha.

let plastico = parseInt(gets());
let diasNecessarios = 0;

// A resolu√ß√£o deste problema tem v√°rias c√≥difica√ß√µes, todavia o bom c√≥digo √© aquele que √© menos verboso.

/* 
 * Bloco de c√≥digo com a solu√ß√£o mais verbosa
 *
 * while (plastico > 1) {
 *  plastico = (plastico / 2);
 *  diasNecessarios++;
 * }
 * print(`Ser√£o necess√°rios ${diasNecessarios} dias`);
 *
 */

// CodeClean - bloco de c√≥digo com a solu√ß√£o menos verbosa, usando fun√ß√µes pr√≥prias do JS 
console.log(`Ser√£o necess√°rios ${ Math.ceil(Math.log2(plastico)) } dias`);